<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-04-24T14:45:20+07:00</updated><id>http://localhost:4000//</id><title type="html">Techtalk | Xu hướng công nghệ</title><subtitle>I'm a self-taught full-stack developer with hopes to become a software engineer.		 In my spare time, I make apps and coding tutorials.	 I've used technologies like ReactJS, React Native, NodeJS, and plenty more to build my applications.		
</subtitle><entry><title type="html">Tăng tốc độ load web trên mobile với công nghệ AMP của Google</title><link href="http://localhost:4000/jekyll/update/2017/04/24/tang-toc-do-load-web-tren-mobile-voi-cong-nghe-AMP-cua-google.html" rel="alternate" type="text/html" title="Tăng tốc độ load web trên mobile với công nghệ AMP của Google" /><published>2017-04-24T14:02:57+07:00</published><updated>2017-04-24T14:02:57+07:00</updated><id>http://localhost:4000/jekyll/update/2017/04/24/tang-toc-do-load-web-tren-mobile-voi-cong-nghe-AMP-cua-google</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/04/24/tang-toc-do-load-web-tren-mobile-voi-cong-nghe-AMP-cua-google.html">&lt;p&gt;&lt;img src=&quot;https://viblo.asia/uploads/47f50ba3-f105-403d-9f65-6b225e553974.jpg&quot; alt=&quot;Tăng tốc độ load web trên mobile với công nghệ AMP của Google&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tăng tốc độ load web trên mobile với công nghệ AMP của Google&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;1amp-là-gì-&quot;&gt;1.AMP là gì ?&lt;/h1&gt;

&lt;p&gt;AMP - Accelerated Mobile Page dự án mã nguồn mở được khởi động và quản lý của Google AMP là một10/2015.Một web site được xây dựng theo chuẩn AMP sẽ có tốc độ tải trang nhanh hơn gấp 4 lần và sử dụng ít dữ công nghệ để tăng tốc độ load cho website khi được truy cập qua các thiết bị di động được Google công bố đầu tiên vào tháng - là công cụ để build một web page, và render một cách nhanh nhất những nội dung cố định trên page đó.&lt;/p&gt;

&lt;h1 id=&quot;2amp-hoạt-động-như-thế-nào&quot;&gt;2.AMP hoạt động như thế nào?&lt;/h1&gt;

&lt;p&gt;Việc sử dụng AMP sẽ tập trung vào 3 phần chính là:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;AMP HTML:là một tập con của HTML là một ngôn ngữ đánh dấu có một số thẻ tùy chỉnh và một số thuộc tính và một số giới hạn sử dụng&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AMP JS: là một javascript framework cho các trang mobile.Nó quản lý cách trình bày tài nguyên và việc load tài nguyên một cách không đồng bộ.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;+Google web cache - AMP CDN
tùy chọn mạng phân phối nội dung, nó sẽ lấy các trang AMP hợp lệ, cache chúng và tự động thực hiện một số công việc tối ưu load page AMP chỉ cho di động để tăng tốc load page thì phải đánh đổi rất nhiều về javascript, css hiện tại amp không cho phép các form, mã javascript xuất hiện trong trang, vì thế bạn sẽ không thể để các form , các on-page comments và một số phần tử khác mà bạn hay dùng trong một trang web thông thường.Vậy có nghĩa là để có một trang AMP hợp lệ bạn cần phải viết template cho site của bạn để nó phù hợp với các quy định của AMP. Ví dụ, tất cả CSS trong AMP phải được viết in-line và phải ít hơn 50KB, việc load custom fonts cũng cần được load sử dụng một extension amp-font đặc biệtcác tài nguyên media trên trang cũng cần được xử lý đặc biệt. Ví dụ, các ảnh cần dùng thành phần amp-imp và phải được xác định kích thước rõ ràng -width bao nhiêu, và height bao nhiêu. Thêm vào đó, nếu là ảnh động GIFs, bạn cần dùng thành phần amp-anim của AMP
Nói chung bạn sẽ phải có 2 version cho bất kỳ một trang tin nào của site: thứ nhất là phiên bản gốc của trang tin mà người dùng thường thấy ví dụ khi họ đang lướt web thông qua desktop và một AMP version cho trang đó. Để google (hay các search engine có hỗ trợ AMP) phát hiện AMP version của một page, cần thay đổi một chút cho cả phiên bản gốc và AMP version của page đó. Phiên bản gốc phải được đưa vào một tag như sau:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link &lt;span class=&quot;nv&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amphtml&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.example.com/blog-post/amp/&quot;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Còn AMP version page cần đưa vào một tag như sau&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link &lt;span class=&quot;nv&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;canonical&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.example.com/url/to/full/document.html&quot;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Nếu page chỉ có AMP version bạn cần thêm thẻ canonical link tới nó, đơn giản trỏ tới chính nó&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link &lt;span class=&quot;nv&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;canonical&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.example.com/url/to/full/document.html&quot;&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Tạo trang amp page cho thapthanh.com&lt;/p&gt;
&lt;h1 id=&quot;3-cách-tạo-ra-một-trang-amp-cho-site&quot;&gt;3. Cách tạo ra một trang AMP cho site&lt;/h1&gt;

&lt;p&gt;Cấu trúc chung cho một AMP template&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html ⚡&amp;gt;
 &amp;lt;head&amp;gt;
   &amp;lt;meta &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;
   &amp;lt;link &lt;span class=&quot;nv&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;canonical&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello-world.html&quot;&lt;/span&gt;&amp;gt;
   &amp;lt;meta &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width=device-width,minimum-

scale=1,initial-scale=1&quot;&lt;/span&gt;&amp;gt;
   &amp;lt;style amp-boilerplate&amp;gt;body&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;-webkit-animation:-....&amp;lt;/style&amp;gt;
   &amp;lt;script async &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.ampproject.org/v0.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;Hello World!
 &amp;lt;!--HTML tags--&amp;gt;
 &amp;lt;!--AMP components--&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Start with the doctype &amp;lt;!doctype html&amp;gt;.Contain a top-level &amp;lt;html amp&amp;gt; tag (&amp;lt;html amp&amp;gt; is accepted as well).&lt;/p&gt;

&lt;p&gt;Contain &amp;lt;head&amp;gt; and &amp;lt;body&amp;gt; tags (They are optional in HTML).Contain a &lt;meta charset=&quot;utf-8&quot; /&gt; tag as the first child of their &amp;lt;head&amp;gt; tag.&lt;/p&gt;

&lt;p&gt;Contain a &lt;script async=&quot;&quot; src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt; tag as the second child of their &amp;lt;head&amp;gt; tag (this includes and loads the AMP JS library).&lt;/p&gt;

&lt;p&gt;Contain a &lt;link rel=&quot;canonical&quot; href=&quot;$SOME_URL&quot; /&gt; tag inside their &amp;lt;head&amp;gt; tag that points to the regular HTML version of the AMP HTML document or to itself if no such HTML version exists.&lt;/p&gt;

&lt;p&gt;Contain a &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,minimum-scale=1&quot; /&gt; tag inside their &amp;lt;head&amp;gt; tag. It’s also recommended to include initial-scale=1.&lt;/p&gt;

&lt;p&gt;Contain the following in their &amp;lt;head&amp;gt; tag:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;style amp-boilerplate&amp;gt;body&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;-webkit-animation:-amp-start 8s steps&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1,end&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0s 1 normal both;-moz-animation:-amp-start 8s steps&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1,end&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0s 1 normal both;-ms-animation:-amp-start 8s steps&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1,end&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0s 1 normal both;animation:-amp-start 8s steps&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1,end&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0s 1 normal both&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;@-webkit-keyframes -amp-start&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;from&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:hidden&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;to&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:visible&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;@-moz-keyframes -amp-start&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;from&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:hidden&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;to&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:visible&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;@-ms-keyframes -amp-start&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;from&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:hidden&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;to&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:visible&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;@-o-keyframes -amp-start&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;from&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:hidden&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;to&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:visible&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;@keyframes -amp-start&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;from&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:hidden&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;to&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;visibility:visible&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;&amp;lt;/style&amp;gt;&amp;lt;noscript&amp;gt;&amp;lt;style amp-boilerplate&amp;gt;body&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&amp;lt;/style&amp;gt;&amp;lt;/noscript&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;amp-img: dùng để thay thế img tag trong HTML
cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-img &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/img/amp.jpg&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1080&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;610&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;responsive&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;an image&quot;&lt;/span&gt;&amp;gt;&amp;lt;/amp-img&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Chú ý layout attribute là tùy chọn width, height là 2 thuộc tính bắt buộc và cần phải có các giá trị rõ ràng 
src phải là HTTPS&lt;/p&gt;

&lt;p&gt;amp-video: dùng để thay thế cho video tag trong HTML5
Cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-video &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;480
 &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;270
  &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/video/tokyo.mp4&quot;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;poster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/img/tokyo.jpg&quot;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;responsive&quot;&lt;/span&gt;
  controls&amp;gt;
  &amp;lt;div fallback&amp;gt;
    &amp;lt;p&amp;gt;Your browser doesn&lt;span class=&quot;s1&quot;&gt;'t support HTML5 video.&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;source type=&quot;video/mp4&quot; src=&quot;/video/tokyo.mp4&quot;&amp;gt;
  &amp;lt;source type=&quot;video/webm&quot; src=&quot;/video/tokyo.webm&quot;&amp;gt;
&amp;lt;/amp-video&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Chú ý: poster attributes là ảnh được hiển thị trước khi video start, mặc định là frame đầu tiên&lt;/p&gt;

&lt;p&gt;src bắt buộc phải là HTTPS&lt;/p&gt;

&lt;p&gt;width, height là bắt buộc và phải được xác định giá trị rõ ràng
Ngoài ra còn có các thuộc tính khác như: loop, muted, autoplay&lt;/p&gt;

&lt;p&gt;amp-anim: dùng cho ảnh động, điển hình như GIF
cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-anim &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;400 &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-gif.gif&quot;&lt;/span&gt;&amp;gt;&amp;lt;/amp-anim&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Chú ý: Để dùng được amp-anim cần phải load thêm thư viện javascript sau:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async custom-element&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amp-anim&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.ampproject.org/v0/amp-anim-0.1.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2 thuộc tính width, height cần được xác định rõ ràng&lt;/p&gt;

&lt;p&gt;amp-anim còn hỗ trợ một tùy chọn placeholder child để hiển thị trong khi src file đang được load&lt;/p&gt;

&lt;p&gt;amp-audio: dùng để thay thế cho audio tag trong HTML5&lt;/p&gt;

&lt;p&gt;cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-audio &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auto&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;50&quot;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://ia801402.us.archive.org/16/items/EDIS-SRP-0197-06.mp3&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;div fallback&amp;gt;
    &amp;lt;p&amp;gt;Your browser doesn’t support HTML5 audio&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/amp-audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;chú ý: amp-audio không hỗ trợ responsive layout nhưng bạn có thể có điều đó bằng việc set height là fixed và width là auto&lt;/p&gt;

&lt;p&gt;Để dùng được amp-audio cần load thêm thư viện javascript sau:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async custom-element&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amp-audio&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.ampproject.org/v0/amp-audio-0.1.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;amp-carousel: được dùng cho slide show&lt;/p&gt;

&lt;p&gt;cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-carousel &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;400&amp;gt;
  &amp;lt;amp-img &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-img1.png&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;400&amp;gt;&amp;lt;/amp-img&amp;gt;
  &amp;lt;amp-img &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-img2.png&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;400&amp;gt;&amp;lt;/amp-img&amp;gt;
  &amp;lt;amp-img &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-img3.png&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;400&amp;gt;&amp;lt;/amp-img&amp;gt;
&amp;lt;/amp-carousel&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;chú ý: Để dùng được amp-carousel cần thêm thư viện javascript sau:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async custom-element&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amp-carousel&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.ampproject.org/v0/amp-carousel-0.1.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Các thuộc tính khác như: type (carousel hoặc slides), layout, control, autoplay, delay&lt;/p&gt;

&lt;p&gt;amp-iframe: dùng để hiển thị một iframe&lt;/p&gt;

&lt;p&gt;cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-iframe &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300
    &lt;span class=&quot;nv&quot;&gt;sandbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;allow-scripts allow-same-origin&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;responsive&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;frameborder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://foo.com/iframe&quot;&lt;/span&gt;&amp;gt;
&amp;lt;/amp-iframe&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Chú ý:Để dùng được amp-iframe cần đưa vào thư viện javascript sau:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async custom-element&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amp-iframe&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.ampproject.org/v0/amp-iframe-0.1.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;amp-iframe không được xuất hiện sát trên cùng của page ngoại trừ iframe đó dùng placeholder. Nó phải cách top của page ít nhất 600px hoặc không chiếm quá 75% viewport&lt;/p&gt;

&lt;p&gt;src của amp-iframe yêu cầu phải là HTTPS&lt;/p&gt;

&lt;p&gt;amp-font: Điều khiển việc load custom font trên các AMP pages&lt;/p&gt;

&lt;p&gt;cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-font
    &lt;span class=&quot;nv&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nodisplay&quot;&lt;/span&gt;
    font-family&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Comic AMP Bold&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3000&quot;&lt;/span&gt;
    font-weight&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bold&quot;&lt;/span&gt;
    on-error-remove-class&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;comic-amp-bold-font-loading&quot;&lt;/span&gt;
    on-error-add-class&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;comic-amp-bold-font-missing&quot;&lt;/span&gt;
    on-load-remove-class&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;comic-amp-bold-font-loading&quot;&lt;/span&gt;
    on-load-add-class&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;comic-amp-bold-font-loaded&quot;&lt;/span&gt;&amp;gt;
&amp;lt;/amp-font&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Chú ý:
Để dùng được amp-font cần đưa vào thư viện javascript sau:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async custom-element&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amp-font&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.ampproject.org/v0/amp-font-0.1.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;amp-youtube: Để dùng cho việc nhúng video youtube
cú pháp:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;amp-youtube data-videoid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mGENRKrdoGY&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;responsive&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;480&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;270&quot;&lt;/span&gt;&amp;gt;&amp;lt;/amp-youtube&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;chú ý:&lt;/p&gt;

&lt;p&gt;Để dùng được amp-youtube cần thêm thư viện javascript sau:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async custom-element&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;amp-youtube&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.ampproject.org/v0/amp-youtube-0.1.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;data-videoid có giá trị chính là youtube id có thể xác định được từ url của youtube&lt;/p&gt;

&lt;p&gt;Ngoài ra còn rất nhiều component khác mà AMP hỗ trợ. Bạn có thể tham khảo thêm trên trang: https://www.ampproject.org/&lt;/p&gt;

&lt;h1 id=&quot;4-cách-validate-một-trang-amp&quot;&gt;4. Cách validate một trang amp&lt;/h1&gt;

&lt;p&gt;Các bước cần thực hiện để validate một AMP page:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;mở page trong trình duyệt Chrome&lt;/li&gt;
  &lt;li&gt;Thêm “#development=1” to URL&lt;/li&gt;
  &lt;li&gt;Mở Chrome DevTools console và kiểm tra lỗi : click chuột chọn inspect element → sau đó chọn mục console hoặc dễ hơn bạn nhấn tổ hợp phím Ctrl + Shift + i (Windows) / Cmd + Opt + i (Mac)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://viblo.asia/uploads/85e6e478-4382-489d-a935-a038adac51db.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hình ảnh Chrome console với một số errors của AMP page
&lt;img src=&quot;https://viblo.asia/uploads/7483ebbc-f5b1-4c85-b718-b1f41ec97a7c.png&quot; alt=&quot;&quot; /&gt;
Hình ảnh Chrome console trên một trang AMP hợp lệ&lt;/p&gt;

&lt;h1 id=&quot;5-kết-luận&quot;&gt;5. Kết luận&lt;/h1&gt;

&lt;p&gt;AMP là một công nghệ mới được Google chính thức công bố gần đây. Đã cố rất nhiều website lớn đã áp dụng công nghệ này. Có thể nói hiệu quả marketing của nó mang lại là rất lớn.&lt;/p&gt;

&lt;p&gt;Bài viết đã giới thiệu tổng quan về đặc điểm, lợi ích, cách áp dụng cũng như cách kiểm tra sự hợp lệ của một trang AMP. Mong rằng đây sẽ là một tài liệu hữu ích cho bạn khi bắt đầu tìm hiểu về AMP. Cảm ơn các bạn đã quan tâm tới bài viết của tôi. Hẹn gặp lại ở các bài viết tiếp theo.&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">Để tìm được công việc tốt, đừng mải theo đuổi đam mê!</title><link href="http://localhost:4000/jekyll/update/2017/04/04/de-tim-duoc-cong-viec-tot-dung-mai-theo-duoi-dam-me.html" rel="alternate" type="text/html" title="Để tìm được công việc tốt, đừng mải theo đuổi đam mê!" /><published>2017-04-04T00:00:00+07:00</published><updated>2017-04-04T00:00:00+07:00</updated><id>http://localhost:4000/jekyll/update/2017/04/04/de-tim-duoc-cong-viec-tot-dung-mai-theo-duoi-dam-me</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/04/04/de-tim-duoc-cong-viec-tot-dung-mai-theo-duoi-dam-me.html">&lt;p&gt;&lt;img src=&quot;http://cafebiz.cafebizcdn.vn/thumb_w/600/2017/job-interview-gettyimages-576936242-57c485cf5f9b5855e5c9e58b-1486385089202-1490279938437-1491190102008-40-0-374-650-crop-1491190124440-1491191202481-1491215842323.jpg&quot; alt=&quot;Để tìm được công việc tốt, đừng mải theo đuổi đam mê!&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Đam mê sẽ không phải là một vị thần, kéo đến và sừng sững ngồi yên một chỗ chờ bạn tưới tắm, chăm bón, phát huy. Mà bạn phải sống, phải làm việc, phải thử cái này, phải cố cái kia, phải thất bại thật nhiều thì mới dần tìm ra được.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chúng ta đang được sống giữa một thời đại mà “đam mê” đã bị thần thánh hoá một cách quá mức. Đâu đâu cũng ra rả “có đam mê là có tất cả”, lướt Facebook thì đập vào mặt là một loạt những khoá học kĩ năng giương cao châm ngôn “hãy theo đuổi đam mê, thành công và sự giàu có sẽ theo đuổi bạn”. Đến mức giờ đây, nếu một người trẻ nào đó buột miệng thốt ra câu “Tôi chưa biết mình đam mê gì cả!” thì chắc hẳn vô số người sẽ cười nhếch mép và thầm nghĩ “haha, cái đồ thất bại!”. Nhưng khoan, bạn có thực sự hiểu đúng về đam mê?&lt;/p&gt;

&lt;h1 id=&quot;7-nốt-nhạc-và-4-lần-thi-rớt-Đại-học&quot;&gt;7 nốt nhạc và 4 lần thi rớt Đại học!&lt;/h1&gt;

&lt;p&gt;Nếu là một người hay đọc những mẩu tin dở khóc dở cười trên mạng thì sẽ khó để bạn có thể quên được câu chuyện về một anh chàng đến từ Quế Sơn, Quảng Nam từng 4 lần thi rớt Đại học hệ thanh nhạc nhưng vẫn quyết tâm “thử thêm lần nữa” vào năm 2012. Anh chàng này từ nhỏ đến lớn sống ở một vùng quê nghèo, đi thi với hành trang vỏn vẹn là vài trăm ngàn dằn túi. Tất cả những gì mà chàng trai này biết về âm nhạc đó là kiến thức căn bản về 7 nốt nhạc, biết hát vài bài quen thuộc nhờ nghe radio và thêm một số ca khúc dân ca do các cụ lớn tuổi ở quê truyền lại.&lt;/p&gt;

&lt;p&gt;Còn nhớ ở thời điểm câu chuyện này bắt đầu nhen nhóm, rất nhiều người đã thể hiện sự thông cảm, đồng thời cổ vũ tinh thần và mong anh chàng này sẽ tiếp tục đăng kí thi lại để tìm kiếm cơ hội thay đổi số phận của mình. “Đam mê là tất cả những gì mà bạn có, hãy tin tưởng chính mình và theo đuổi đến cùng nhé!” – một comment điển hình trích ra từ câu chuyện năm xưa.&lt;/p&gt;

&lt;p&gt;Anh chàng trên, cũng như những người từng hừng hực khí thế đứng sau cổ vũ chính là những nạn nhân điển hình của thứ gọi là “sự thần thánh hoá đam mê”. Tôi không có ý muốn dìm chết giấc mơ của người khác, cũng không có nhu cầu lên lớp ai. Tôi chỉ muốn mọi người thẳng thắn đối mặt với nút thắt thật sự trong câu chuyện trên: rằng làm sao mà một người với kiến thức âm nhạc bập bõm xoay quanh chỉ 7 nốt nhạc lại có thể đánh bại được hàng ngàn đối thủ khác và đậu Đại học cơ chứ?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cafebiz.cafebizcdn.vn/2017/photo-0-1491215889986.jpg&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lẽ ra ở thời điểm đó, thứ mà mọi người nên trao cho chàng trai kia không phải là niềm tin, là hi vọng, mà là một cái nhìn thật sự toàn diện về thứ mà anh ta đang theo đuổi. Lẽ ra nên có một ai đó bước đến và nói cho anh ta hiểu những chuẩn mực, những kiến thức cần thiết để có thể đậu được chuyên ngành khó nhằn kia. Lẽ ra nên có người nào đó nói cho anh ta biết rằng đam mê là một khái niệm vô chừng, và theo đuổi nó khi trong tay không có bất kì vũ khí gì là một quyết định thiếu sáng suốt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cafebiz.cafebizcdn.vn/2017/photo-1-1491215889996.jpg&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Đam mê chỉ là điều kiện cần, không phải điều kiện đủ. Đam mê càng không phải là thứ để tuỳ tiện đem ra làm bình phong cho sự không cố gắng hay những thiếu sót của bản thân. Tiếc thay, rất nhiều người đã vô tình để phí thời gian, công sức, thậm chí đánh mất hàng năm trời tuổi trẻ của mình vì không hiểu được điều này, giống như anh chàng kia.&lt;/p&gt;

&lt;h1 id=&quot;bạn-sinh-ra-để-làm-những-thứ-bạn-giỏi-không-phải-để-chạy-theo-những-thứ-bạn-yêu&quot;&gt;Bạn sinh ra để làm những thứ bạn giỏi, không phải để chạy theo những thứ bạn “yêu”.&lt;/h1&gt;

&lt;p&gt;Đam mê cũng giống như khi yêu một người. Đôi khi thứ bạn gắn bó về lâu về dài lại không phải thứ khiến bạn ngày nhớ đêm mong, mà lại là thứ phù hợp nhất và giúp bạn hoàn thiện bản thân. Chúng ta bị “nhồi sọ” quá nhiều những suy nghĩ đại loại như “Không có giới hạn nào cho bản thân mỗi người”, “Bạn có thể trở thành bất cứ ai mà bạn muốn”. Không! Tôi, bạn, anh ấy, cô ta - tất cả mọi người, chúng ta không phải là siêu nhân, chúng ta là con người, và ai cũng đều có những giới hạn mà bản thân sẽ mãi mãi không thể vượt qua được.&lt;/p&gt;

&lt;p&gt;Không phải tự nhiên trên đời này lại phân ra người não trái, não phải. Các nhà khoa học cũng chẳng thừa hơi dư sức mà đi làm hẳn một hệ thống phân loại 16 tính cách con người. Còn cả IQ và EQ nữa - rất nhiều những công ty sáng tạo và công nghệ lớn trên thế giới đang ngày ngày tuyển dụng nhân sự dựa vào hai chỉ số trên. Những thứ này được sinh ra để xác định tính cách, điểm mạnh, điểm yếu và con đường phù hợp của mỗi người.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cafebiz.cafebizcdn.vn/2017/photo-2-1491215890004.jpg&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hay nói cách khác, một phần những gì tạo nên bạn của ngày hôm nay sẽ quyết định bạn trở thành người thế nào sau này. Tài năng, kĩ năng, khả năng - tất cả những gì mà bạn đang có không hề dư thừa và ngẫu nhiên, nó là món quà mà ông trời ban tặng cho bạn vì một mục đích gì đó mà bạn là người có nhiệm vụ phải tìm ra.&lt;/p&gt;

&lt;p&gt;Bạn sinh ra để làm những thứ bạn giỏi, không phải để chạy theo những thứ bạn “yêu”. Hãy thử tưởng tượng chuyện gì sẽ xảy ra nếu một người có IQ thấp, khả năng tiếp thu kém, không sâu sát tiểu tiết nhưng tràn đầy “đam mê” lại muốn được học nghề bác sĩ. Chắc chắn họ sẽ không thể hoàn thành chương trình học “khó thượng thừa” của mình. Và cũng chẳng ai muốn giao mạng sống, sức khoẻ của mình vào tay một bác sĩ như vậy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cafebiz.cafebizcdn.vn/2017/photo-3-1491215890009.jpg&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Câu chuyện về “anh chàng 7 nốt nhạc” ở trên cũng là một ví dụ điển hình. Có thể đam mê âm nhạc của anh chàng ấy cháy bỏng thật đấy, nhưng đáng tiếc đó lại không phải là thứ mà anh ấy giỏi. Nên nhớ rằng có bột mới gột nên hồ, sự cố gắng và tập luyện không ngừng nghỉ chỉ có thể có tác dụng khi bạn tìm được đúng đam mê, sống trong đúng môi trường phù hợp để phát triển bản thân. Cũng giống như một con cá chỉ có thể bơi nhanh khi được ở dưới nước, còn ở những môi trường khác, mọi vẫy vùng chỉ là vô ích. Vậy nên ngay từ hôm nay, thay vì đắn đo “Rốt cuộc mình thích cái gì?” thì hãy tự đặt câu hỏi “Mình làm tốt điều gì nhất? Thứ gì nếu mình không tồn tại thì nó cũng sẽ không tồn tại.”&lt;/p&gt;

&lt;p&gt;Đam mê là chấp nhận quá trình, không chỉ là mong chờ thành quả.&lt;/p&gt;

&lt;p&gt;Thật dễ để đưa ra câu trả lời khi có ai đó hỏi chúng ta muốn làm gì, muốn trở thành người như thế nào. Nhưng không phải ai cũng hình dung được những gì cần phải trả để bước được đến vị trí cuối cùng đó.&lt;/p&gt;

&lt;p&gt;Tôi có một người bạn rất mê đồ hoạ. Thói quen đầu tiên của cậu ấy mỗi khi thức giấc là lao lên Behance và mải miết lưu về những thiết kế đẹp đến từ khắp nơi. Cậu ấy ôm mộng có thể tạo ra những sản phẩm tương tự, không ngừng khoe với cả thế giới ước mơ của mình và sẵn sàng đóng hàng chục triệu đồng cho những khoá học căn bản mà bạn hoàn toàn có thể tìm thấy nhan nhản trên mạng. Nhưng rồi chỉ sau vài tháng, cậu ấy bắt đầu chán nản, rồi cuối cùng là bỏ cuộc. Lí do là đến lúc bắt tay vào làm, cậu ấy mới nhận ra để làm nên những thứ đẹp đẽ như vậy lại chẳng dễ chút nào. Nào là một đống phím tắt khó nhớ, rồi những quy tắc thiết kế khô khan, 1001 khái niệm phối màu và cả những bài tập ghép trái cây “khùng điên” nữa. Vậy mà trước giờ cứ tưởng chỉ cần biết chọn hình với chọn font đẹp là được. Thế là hết, giấc mộng trở thành designer kết thúc tại đây. Tiếp tục về nhà lướt Behance trong vô vọng!&lt;/p&gt;

&lt;p&gt;Với tính chất công việc của mình, tôi được gặp rất nhiều những bạn trẻ với những ước mơ lớn, những đam mê cháy bỏng tưởng chừng như không gì dập tắt được. Nhưng hoá ra thứ họ nhìn thấy chỉ là phần nổi của tảng băng chìm. Họ hồn nhiên nghĩ rằng thế giới này màu hồng, và con đường mà họ sắp bước đi sẽ ngập tràn những điều tốt đẹp, còn đam mê sẽ là chiếc khiên vững chắc bảo vệ cho ước mơ của họ. Trong lúc rung đùi cười hạnh phúc vì nghĩ về đích đến, họ quên mất rằng mình còn cả một con đường gian truân phải đi.&lt;/p&gt;

&lt;p&gt;Bạn muốn làm ca sĩ nổi tiếng, đam mê của bạn là được đứng trên sân khấu ư? Được thôi! Nhưng liệu bạn đã sẵn sàng cho xuất phát điểm là ca sĩ hát lót hội chợ, sẽ phải làm việc, luyện tập 18h/ ngày, mất ngủ triền miên, cân nặng trồi sụt liên tục, suy nhược cơ thể, bị nhồi nhét trên những chiếc xe chật chội và ngồi lì trên đó cả ngày để đến điểm diễn, bước xuống hát 2 bài và rồi tiếp tục được quăng lên xe trở về ngay trong đêm? Nghe thật khó tin, nhưng đó chính là cuộc sống, là câu chuyện thật sự của rất nhiều những ca sĩ nổi tiếng hiện nay. Thậm chí có khi còn tồi tệ hơn. Nhưng liệu bạn có biết? Và nếu đã biết, thì bạn có sẵn sàng chấp nhận hi sinh?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cafebiz.cafebizcdn.vn/2017/photo-4-1491215890016.jpg&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hãy nghĩ kĩ về thứ mà bạn gọi là “đam mê”, tự hình dung ra bức tranh toàn cảnh và đặt những câu hỏi tương tự cho chính mình. Nếu còn đang lưỡng lự chưa biết trả lời thế nào thì có lẽ đã đến lúc để bạn nghiêm túc xem xét lại đam mê rồi đấy! Chỉ khi nào bạn chấp nhận được mọi khó khăn gian khổ, sẵn sàng nhảy khỏi giường vào mỗi sáng và chiến đấu đến cùng vì một thứ gì đó thì hãy gọi nó là “đam mê”.&lt;/p&gt;

&lt;p&gt;Bạn sẽ không tìm thấy đam mê của mình ngay đâu!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cafebiz.cafebizcdn.vn/2017/photo-5-1491215890025.jpg&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nếu bạn đã tìm ra thứ khiến bạn muốn gắn bó và theo đuổi cả đời, xin chúc mừng, bạn là người rất may mắn! Còn nếu không, cũng đừng vội nôn nóng hay cảm thấy bị “bỏ rơi”. Sự thật rằng trong cuộc đời của chúng ta, phần trăm những người không biết thứ mình khao khát luôn cao hơn so với những người hiểu rõ sứ mệnh của bản thân.&lt;/p&gt;

&lt;p&gt;Nếu có thời gian, bạn nên dành một ít thời gian để tìm hiểu về Joy Mangano – người phụ nữ đã phát minh ra chiếc chổi lau tiện ích mang tên Miracle Mop – thứ đã cứu sống hàng chục triệu phụ nữ thường xuyên làm việc nhà trên thế giới. Joy vốn là một người có cuộc sống tẻ nhạt, suốt ngày ru rú trong nhà, hay cảm thấy mất phương hướng và luôn tự thắc mắc rốt cuộc mình tồn tại trên đời này là vì điều gì.&lt;/p&gt;

&lt;p&gt;Và rồi cuối cùng vào một ngày đẹp trời, “đam mê” cũng đã xuất hiện. Nó không có gì to tát hơn ngoài việc… tạo nên một cây lau nhà chất lượng cho chính Joy lẫn những người hay làm việc nhà. Tôi còn nhớ mãi câu thoại của người phụ nữ này khi phải trình bày ý tưởng và thuyết phục giám đốc siêu thị để được bày bán sản phẩm của mình: “Thành thật mà nói thì tôi không biết gì về những biểu đồ phức tạp hay chuyện kinh doanh cả. Nhưng tôi là người tự tay lau nhà của mình mỗi ngày. Và tôi muốn làm ra cây lau nhà này vì tôi biết rằng nó tốt hơn bất kì thứ gì đang bày bán ngoài kia!”&lt;/p&gt;

&lt;p&gt;Hay đó là câu chuyện về Yuki Hirano – một anh chàng rớt Đại học, không biết làm gì với cuộc đời của mình trong “Woodjob”. Trong một phút rảnh rổi sinh nông nổi, Yuki quyết định sẽ xách balo lên và về rừng để theo học một lớp tập huấn lâm nghiệp kéo dài 30 ngày chỉ vì vô tình nhìn thấy hình ảnh của một cô gái xinh đẹp trên tờ poster khoá học. Từ một chàng trai thành thị yếu ớt, lười biếng và lúc nào cũng ôm khư khư cái điện thoại bên mình, Yuki buộc phải lao vào làm những công việc tay chân cực khổ và chống chọi lại với sự khắc nghiệt của thiên nhiên. Đã có lúc anh chàng bỏ cuộc và tìm cách trốn chạy. Nhưng rồi cuối cùng Yuki vẫn quay lại với khu rừng Kamusari vì nhận ra giữa mình và thiên nhiên có một sự gắn kết lạ kì, và đây mới thực sự là đam mê, là thứ mà mình muốn theo đuổi cả đời.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cafebiz.cafebizcdn.vn/2017/photo-6-1491215890037.jpg&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vậy đó, đam mê sẽ không phải là một vị thần, kéo đến và sừng sững ngồi yên một chỗ chờ bạn tưới tắm, chăm bón, phát huy. Mà bạn phải sống, phải làm việc, phải thử cái này, phải cố cái kia, phải thất bại thật nhiều thì mới dần tìm ra được. Rất nhiều thứ đang chờ đợi bạn ở phía trước, đừng tự hạn chế khả năng của chính mình mà hãy trải nghiệm liên tục để biết được đâu là thứ mà mình đang thực sự tìm kiếm. Ngày tháng còn dài, làm tốt mới có báo đáp. Chúc bạn sẽ sớm tìm ra được sứ mệnh của cuộc đời mình và sống trọn vẹn với sứ mệnh đó.&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">Angular2 On Rails</title><link href="http://localhost:4000/2017/03/30/angular2-on-rails.html" rel="alternate" type="text/html" title="Angular2 On Rails" /><published>2017-03-30T00:00:00+07:00</published><updated>2017-03-30T00:00:00+07:00</updated><id>http://localhost:4000/2017/03/30/angular2-on-rails</id><content type="html" xml:base="http://localhost:4000/2017/03/30/angular2-on-rails.html">&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/sungthecoder.com/wp-content/uploads/2017/01/trees-railroads-railroad-e1485229908918.jpg?fit=1024%2C617&quot; alt=&quot;How to have Angular2 and Rails coexist peacefully on your laptop and servers&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How to have Angular2 and Rails coexist peacefully on your laptop and servers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most of the front-end tutorials assume that your JS application runs on a separate server to the backend application and the front-end code has different codebase. It makes sense when you have independent teams to develop the front-end and the backend. But if you work in a small team of full stack developers, having separate codebase becomes an overhead.&lt;/p&gt;

&lt;p&gt;One option of integrating the Angular app with Rails would be putting all javascript code within Rails directory structure, i.e., ‘app/assets/javascript.’&lt;/p&gt;

&lt;p&gt;However, this option only makes sense when you have a little JavaScript code, and you want Rails asset pipeline to concatenate all your javascript codes. So most of the case, this would not be the solution because:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;TypeScript is the language choice of Anguar2. And Rails’ asset pipeline does not know how to handle typescript. You don’t have to write Angular2 app in TypeScript, but you don’t want to give up the option just because the environment you chose.&lt;/li&gt;
  &lt;li&gt;And the Angualar2 app may want to be treated as the first class app. Angular2 app will play vital importance in your whole application. Placing that critical code somewhere deep inside the closet, ‘app/assets/javascript/ng2-app/…’ doesn’t seem to be very nice.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this article, I would like to show how to configure Rails and Angular2, so that Rails app and the Angular2 app can coexist within one repository.&lt;/p&gt;

&lt;p&gt;Followings are the result I would like to achieve at the end of this article:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your Angular2 app’s source code live in an independent directory structure, e.g. ‘RAILS_ROOT/ng2-app’&lt;/li&gt;
  &lt;li&gt;Your Angular2 Service can use relative path for API calls because they will live on the same server. No need for CORS configuration.&lt;/li&gt;
  &lt;li&gt;During development, you can use rails development server and angular development server. Rails server provides all the API calls, and Angular2 server helps you with the Angular2 app.&lt;/li&gt;
  &lt;li&gt;At deployment time, asset precompile will include your Angular 2 bundles so that Rails controller can serve the Angular2 app.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;1-create-a-rails-app&quot;&gt;1. Create a Rails app.&lt;/h1&gt;

&lt;p&gt;The first thing you would need is a working Rails app. If you already have an existing rails app, that’s great. But if you’d like to start from scratch, here’s how we start.&lt;/p&gt;

&lt;p&gt;Let’s create a Rails app and call it ‘rails_ng2.’&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rails new rails_ng2
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rails_ng2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And let’s add a resource and call it ‘widget.’ The widget has three properties: name, description, and price.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rails g scaffold Widget name description price:float
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/sungthecoder.com/wp-content/uploads/2017/01/rails_g_scafold.png?resize=1024%2C864&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s migrate the database.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rake db:migrate
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/sungthecoder.com/wp-content/uploads/2017/01/rake_db_migrate.png?resize=1024%2C109&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Run the rails development server&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rails s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then you already have a working Rails app! Point your browser to http://localhost:3000/widgets; then you should be able to view and create some widgets.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/sungthecoder.com/wp-content/uploads/2017/01/localhost4200Widgets.png?w=804&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-add-api-endpoint&quot;&gt;2. Add API endpoint&lt;/h1&gt;

&lt;p&gt;Now it’s time to build API endpoints for these widgets you’ve just created. It seems to be redundant to write another controller for the same behavior, but they serve two different audiences(human vs. machine) and purposes(rendering HTML and providing data). So it is always a good idea to create a separate endpoint for APIs.&lt;/p&gt;

&lt;p&gt;With Rails, it is always easy to create another controller:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rails g controller api/widgets
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And edit widgets controller file.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Api::WidgetsController &amp;lt; ApplicationController
  before_action :set_widget, only: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:show, :update, :destroy]
  respond_to :json

  def index
    @widgets &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Widget.all
    render json: @widgets
  end

  def show
    render json: @widget
  end

  def create
    @widget &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Widget.new&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;widget_params&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; @widget.save
      render json: @widget
    &lt;span class=&quot;k&quot;&gt;else
      &lt;/span&gt;render json: @widget.errors, status: :unprocessable_entity
    end
  end

  def update
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; @widget.update&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;widget_params&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      render json: @widget
    &lt;span class=&quot;k&quot;&gt;else
      &lt;/span&gt;render json: @widget.errors, status: :unprocessable_entity
    end
  end

  def destroy
    @widget.destroy
    head :no_content
  end

  private
  &lt;span class=&quot;c&quot;&gt;# Use callbacks to share common setup or constraints between actions.&lt;/span&gt;
  def set_widget
    @widget &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Widget.find&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;params[:id]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  end

  &lt;span class=&quot;c&quot;&gt;# Never trust parameters from the scary internet, only allow the white list through.&lt;/span&gt;
  def widget_params
    params.require&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;:widget&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.permit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;:name, :description, :price&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Add the controller to the route configuration.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;namespace :api &lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;resources :widgets
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can point your browser to http://localhost:3000/api/widgets and see JSON representation for your widget resources.&lt;/p&gt;

&lt;h1 id=&quot;3-add-angular2-app&quot;&gt;3. Add Angular2 App&lt;/h1&gt;
&lt;p&gt;Now you have a working Rails app and API endpoint; it’s time to build an Angular2 app to consume the API.&lt;/p&gt;

&lt;p&gt;With Angular CLI, it becomes easy to create an angular2 app. If you don’t have Angular CLI, install it with npm.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install -g angular-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And create an Angular2 app:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ng new ng2-app
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This command will create an Angular2 app under ‘ng-app’ directory.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ng2-app
&lt;span class=&quot;gp&quot;&gt;ng2-app$ &lt;/span&gt;npm start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Point your browser to http://localhost:4200 and you will see this.  &lt;br /&gt;
&lt;img src=&quot;https://i0.wp.com/sungthecoder.com/wp-content/uploads/2017/01/localhost4200.png?w=970&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-add-components-and-routing-to-the-angular2-app&quot;&gt;4. Add components and routing to the Angular2 app&lt;/h1&gt;

&lt;p&gt;Let’s create two components; home and widgets. With Angular CLI, it is one line task:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;ng2-app$ &lt;/span&gt;ng g component widgets
 create src/app/widgets/widgets.component.css
 create src/app/widgets/widgets.component.html
 create src/app/widgets/widgets.component.spec.ts
 create src/app/widgets/widgets.component.ts
&lt;span class=&quot;gp&quot;&gt;ng2-app$ &lt;/span&gt;ng g component home
 create src/app/home/home.component.css
 create src/app/home/home.component.html
 create src/app/home/home.component.spec.ts
 create src/app/home/home.component.ts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Let’s add a router to load one of these components based on your URL.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; NgModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Routes, RouterModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/router'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; WidgetsComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./widgets/widgets.component'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; HomeComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./home/home.component'&lt;/span&gt;;
 
const routes: Routes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path: &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;, component: HomeComponent&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path: &lt;span class=&quot;s1&quot;&gt;'widgets'&lt;/span&gt;, component: WidgetsComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path: &lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;, redirectTo: &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;;
 
@NgModule&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
  imports: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;RouterModule.forRoot&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;routes&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt;,
  exports: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;RouterModule],
  providers: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;class Ng2RestAppRoutingModule &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;     
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This routing configuration will have our app to load Widgets Component when we point the browser URL to ‘/widgets’ or Home Component otherwise.&lt;/p&gt;

&lt;p&gt;And we will have to tell where to load these components. Add &lt;router-outlet&gt;&lt;/router-outlet&gt;  at the end of ‘ng-app/src/app/app.component.html‘&lt;/p&gt;

&lt;p&gt;And for our convenience, let’s add a navigation menu to app component template.&lt;/p&gt;

&lt;p&gt;-app/src/app/app.component.htmlXHTML&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;lt;h1&amp;gt;  &lt;/span&gt;&amp;lt;/h1&amp;gt;

&amp;lt;nav &lt;span class=&quot;nv&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mdl-navigation&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;a &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;routerLink]&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;links.home&quot;&lt;/span&gt;&amp;gt;Home&amp;lt;/a&amp;gt;
  &amp;lt;a &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;routerLink]&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;links.widgets&amp;gt;Widgets&amp;lt;/a&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;router-outlet&amp;gt;&amp;lt;/router-outlet&amp;gt;     
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And let’s add it to the component class.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;;

@Component&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
  selector: &lt;span class=&quot;s1&quot;&gt;'app-root'&lt;/span&gt;,
  templateUrl: &lt;span class=&quot;s1&quot;&gt;'./app.component.html'&lt;/span&gt;,
  styleUrls: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./app.component.css'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;class AppComponent &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  title &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'app works!'&lt;/span&gt;;
  links &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    home: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
    widgets: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/widgets'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;     
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we will have to wire all these modules in app.module.ts&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; BrowserModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/platform-browser'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; NgModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; FormsModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/forms'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; HttpModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/http'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Ng2RestAppRoutingModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./app-routing.module'&lt;/span&gt;;

import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; AppComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./app.component'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; HomeComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./home/home.component'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; WidgetsComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./widgets/widgets.component'&lt;/span&gt;;

@NgModule&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
  declarations: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    AppComponent,
    HomeComponent,
    WidgetsComponent
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
  imports: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    BrowserModule,
    FormsModule,
    HttpModule,
    Ng2RestAppRoutingModule
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
  providers: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;,
  bootstrap: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AppComponent]
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;class AppModule &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;     
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;At this point, you should be able to run the Angular2 app on the separate development server, i.e., ng serve. You can click the navigation button and see it loads home and widgets components.&lt;/p&gt;

&lt;h1 id=&quot;5-add-a-service&quot;&gt;5. Add a Service&lt;/h1&gt;
&lt;p&gt;Now we have built two separate apps: Rails app and Angular2 app, but they are not connected anyhow. In this step, we will create a service that can consume API that we’ve just set up on Rails app.&lt;/p&gt;

&lt;p&gt;Angular CLI have service generator, but unlike the component generator, it creates files in the current directory. So we will have to create a directory and cd into the directory where we want the service modules to reside.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;ng2-app/src/app$ &lt;/span&gt;mkdir shared
&lt;span class=&quot;gp&quot;&gt;ng2-app/src/app$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;shared
&lt;span class=&quot;gp&quot;&gt;ng2-app/src/app/shared$ &lt;/span&gt;ng g service widgets
 create src/app/shared/widgets.service.spec.ts
 create src/app/shared/widgets.service.ts     
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s edit widgets service:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Injectable &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Http, Response &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/http'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Observable &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'rxjs/Observable'&lt;/span&gt;;
import &lt;span class=&quot;s1&quot;&gt;'rxjs/add/operator/map'&lt;/span&gt;;

@Injectable&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;class WidgetsService &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  private url &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'api/widgets'&lt;/span&gt;;

  constructor &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;private http: Http&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;

  getWidgets&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;this.http.get&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;this.url&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      .map&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; res.json&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;      
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Note that we didn’t add ‘http://localhost:3000’ suffix to the URL. We treat the API URL as if they are from the same origin.&lt;/p&gt;

&lt;p&gt;Let’s use this service on our widgets component:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Component, OnInit &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; WidgetsService &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'../shared/widgets.service'&lt;/span&gt;

@Component&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
  selector: &lt;span class=&quot;s1&quot;&gt;'app-widgets'&lt;/span&gt;,
  templateUrl: &lt;span class=&quot;s1&quot;&gt;'./widgets.component.html'&lt;/span&gt;,
  styleUrls: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./widgets.component.css'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;class WidgetsComponent implements OnInit &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  constructor &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;private widgetsService: WidgetsService&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
  widgets &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;

  ngOnInit&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    this.widgetsService.getWidgets&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;.
    subscribe&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;widgets &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; this.widgets &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; widgets&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;     
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And update the template to display widgets object:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;
  widgets works!
&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;
  
&lt;span class=&quot;gp&quot;&gt;&amp;lt;/pre&amp;gt;     &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And add the service module to the app modules.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; BrowserModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/platform-browser'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; NgModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; FormsModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/forms'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; HttpModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'@angular/http'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Ng2RestAppRoutingModule &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./app-routing.module'&lt;/span&gt;;

import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; AppComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./app.component'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; HomeComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./home/home.component'&lt;/span&gt;;
import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; WidgetsComponent &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./widgets/widgets.component'&lt;/span&gt;;

import &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; WidgetsService &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; from &lt;span class=&quot;s1&quot;&gt;'./shared/widgets.service'&lt;/span&gt;;

@NgModule&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
  declarations: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    AppComponent,
    HomeComponent,
    WidgetsComponent
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
  imports: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    BrowserModule,
    FormsModule,
    HttpModule,
    Ng2RestAppRoutingModule
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
  providers: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    WidgetsService
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
  bootstrap: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AppComponent]
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;class AppModule &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you run your Angular2 app and load Widgets Component, you will see 404 error on the developer console. That is because we do not have anything on http://localhost:4200/api/widgets. Our backend server is running on http://localhost:3000/api/widgets. So we have to tell our Angular server to look at http://localhost:3000 when we make an API call.&lt;/p&gt;

&lt;h1 id=&quot;6-add-dev-server-api-proxy&quot;&gt;6. Add dev server API proxy&lt;/h1&gt;

&lt;p&gt;In this step, we will tell Angular development server to look for localhost:3000 when we ask for something from /api/*.&lt;/p&gt;

&lt;p&gt;First, you will have to create a proxy configuration file.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;/api&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;target&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:3000&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;secure&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This configuration tells that when you see ‘/api’ prefix in your URL, forward the message to ‘http://localhost:3000’.&lt;/p&gt;

&lt;p&gt;And let’s have our development server to use this proxy configuration. Open “package.json” file and replace start script with following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;ng serve --proxy-config proxy.config.json&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now, restart your Angular2 development server, you should see Widgets Component load all the widgets in JSON format!&lt;/p&gt;

&lt;p&gt;Congratulations! You successfully wired Rails app and Angular2 app. You can do both frontend and backend development in one directory structure. Add more API endpoints; then you should be able to use them right away from your Angular2 app.&lt;/p&gt;

&lt;h1 id=&quot;7-add-controller-to-serve-the-angular2-app&quot;&gt;7. Add controller to serve the Angular2 app&lt;/h1&gt;

&lt;p&gt;We’ve made a big progress, but we didn’t finish yet. Our ultimate goal is to have the Angular2 app available under our Rails app, not two separate servers: rails server running on port 3000, Angular server running on port 4200. Then we need to create a controller for our Angular2 app and router to call the controller.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rails g controller ng2_app
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s add the route to the configuration.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;get &lt;span class=&quot;s2&quot;&gt;&quot;ng2-app&quot;&lt;/span&gt;,       controller: &lt;span class=&quot;s2&quot;&gt;&quot;ng2_app&quot;&lt;/span&gt;, action: &lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt;
get &lt;span class=&quot;s2&quot;&gt;&quot;ng2-app/*path&quot;&lt;/span&gt;, controller: &lt;span class=&quot;s2&quot;&gt;&quot;ng2_app&quot;&lt;/span&gt;, action: &lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These two lines will let Rails to call index method on the Ng2AppController we’ve just created. We need to have these two lines so that Rails can ignore additional paths after ‘localhost:3000/ng2-app/, but Angular2 app will read path and decide its actions.&lt;/p&gt;

&lt;p&gt;For example, if we enter ‘http://domain-name.com/ng2-app’, Rails will call index method of Ng2AppController. And then our Angular2 app’s routing system will decide to load Home Component.
But if we enter ‘http://domain-name.com/ng2-app/widgets’, Rails will ignore the last part: ‘widgets’ and still call index method of Ng2AppController. And the Anguar2 app’s routing will read the last part of the URL and load Widgets Component.&lt;/p&gt;

&lt;p&gt;Since we don’t have any method defined in NgAppController, let’s add the method.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Ng2AppController &amp;lt; ApplicationController
  def index
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And we need the view for this action.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;lt;% &lt;/span&gt;content_for :head &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; %&amp;gt;
&amp;lt;base &lt;span class=&quot;nv&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ng2-app&quot;&lt;/span&gt;&amp;gt;
&lt;span class=&quot;gp&quot;&gt;&amp;lt;% &lt;/span&gt;end %&amp;gt;

&amp;lt;app-root&amp;gt;Loading...&amp;lt;/app-root&amp;gt;

&amp;lt;%&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; javascript_include_tag &lt;span class=&quot;s2&quot;&gt;&quot;ng2-app/inline&quot;&lt;/span&gt; %&amp;gt;
&amp;lt;%&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; javascript_include_tag &lt;span class=&quot;s2&quot;&gt;&quot;ng2-app/styles.bundle&quot;&lt;/span&gt; %&amp;gt;
&amp;lt;%&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; javascript_include_tag &lt;span class=&quot;s2&quot;&gt;&quot;ng2-app/main.bundle&quot;&lt;/span&gt; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;A few things are going on in this file:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&amp;lt;base href=”/ng2-app”&amp;gt; tells the Angular2 app to ignore first ‘/ng2-app’ from the path. For example, if the URL of the browser is pointing to ‘http://domain-name.com/ng2-app/‘, Anguar2 will only look at ‘/‘ and load Home Component. And if it sees ‘http://domain-nam.com/ng2-app/widgets‘, it will recognize ‘/widgets‘ and serve Widgets Component.&lt;/li&gt;
  &lt;li&gt;We must put this &lt;base /&gt; tag within &amp;lt;head&amp;gt; tag, so we are wrapping &lt;base /&gt; tag between &lt;coneten_for :head=&quot;&quot;&gt;. We are going to add another yield  statement in the layout file later.&lt;/coneten_for&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;app-root&gt;Loading...&lt;/app-root&gt;
    &lt;p&gt;is where the Angular2 app will live.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;When you build the Angular2 app with ‘ng build,’ it will generate three files: ‘inline.js’, ‘styles.bundle.js’ and ‘main.bundle.js’ into ‘ng2-app/dist/’ directory. So we are loading these three files into our view template. Note that ‘ng2-app/’ prefix of the javascript filenames are not necessary. However, if you are planning to add more than one Anguar2 app under the same project, it is better to add the subdirectory.
Let’s open the application.html.erb and add one more line right before the closing tag of &amp;lt;/head&amp;gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; yield :head %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;Now you open up the browser, and load ‘http://localhost:3000/ng2-app’ then you will see ‘Loading…’ but nothing happens. And the browser console will spit out 404 error for all the javascript files we try to load. That’s because Rails cannot find the javascript files we included in &amp;lt;%= javascript_include_tag %&amp;gt; .&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;8-let-rails-know-where-to-find-anuglar2-app&quot;&gt;8. Let Rails know where to find Anuglar2 app&lt;/h1&gt;
&lt;p&gt;By default, Rails look for ‘app/assets/javascript’ and ‘lib/assets/javascript’, ‘vendor/assets/javascript’ directory to find the files we stated in &amp;lt;%= javascript_include_tag %&amp;gt; . But our Angular2 app does not reside on any of those directories. One solution would be copying Angular2 app files to one of standard search directories, but then we will have to copy files every time we build the Angular2 app and it’s too much work (I’m lazy). Instead, let’s teach Rails where to search.&lt;/p&gt;

&lt;p&gt;Open ‘config/application.rb’ and add the following line between the ‘class Application &amp;lt; Rails::Application’ and ‘end’:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config.assets.paths &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt; Rails.root.join(&quot;ng2-app&quot;, &quot;dist&quot;)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This one line will tell Rails to look ‘RAILS_ROOT/ng2-app/dist/’ directory in addition to the Rails default asset paths for JavaScript files. So Rails will turn &amp;lt;%= javascript_include_tag “ng2-app/inline” %&amp;gt;  into &lt;script src=&quot;ng2-app/dist/ng2-app/inline.js&quot;&gt;  for development environment.&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;But in the production environment, Rails will look for ‘/public/assets/ng-app/inline.[MD5-hash].js’. You will also have to tell Rails to include these file for precompilation. In order for that add the following line in “config/initializers/assets.rb”&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rails.application.config.assets.precompile +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  %w&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; ng2-app/inline.js ng2-app/styles.bundle.js ng2-app/main.bundle.js&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;The last step is to tell Angular2 to place bundle files into ‘dist/ng2-app/’ instead of ‘dist/.’ Open ‘ng2-app/angular-cli.json’. And change apps[“outDir”]  value to dist/ng2-app.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  ...
  &lt;span class=&quot;s2&quot;&gt;&quot;apps&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    ...
    &lt;span class=&quot;s2&quot;&gt;&quot;outDir&quot;&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'dist/ng2-app'&lt;/span&gt;
    ...
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Rebuild your Angular2 app with ng build  and restart Rails server with  rails s ; then you should be able to see your Angular2 app working on ‘http://localhost:3000/ng2-app’.&lt;/p&gt;

&lt;p&gt;You may wonder why we bother to place our Angular2 app bundle files on ‘dist/ng2-app’ instead of the default ‘dist/’ directory. There are two reasons for that: self-documentation and future-proof.
Have left all the bundle files under ‘dist/’ directory, we could include the javascript files in our Rails view file like this: &amp;lt;%= javascript_include_tag ‘main.bundle’ %&amp;gt;  or &amp;lt;%= javascript_include_tag ‘inline’ %&amp;gt; . But then, two months later, you come back to this code and might have forgotten what the ‘min.bundle’ or ‘inline’ are. It would be easier to remember to if you write ‘ng2-app/main.bundle’ or ‘ng2-app/inline’.&lt;/p&gt;

&lt;p&gt;Imagine six months later; your client wants to add another Single Page App under the same Rails app. That’s easy. You create ‘another-app’ directory on the RAILS_ROOT directory for another Angular2 app. And add config.assets.paths « Rails.root.join(“another-app”, “dist”)  to your application.rb file. And your view file, you include the javascript bundles: &amp;lt;%= javascript_include_tag ‘main.bundle’ %&amp;gt; . Now you see the problem? Rails will include the JavaScript files from ‘ng-app/dist/’ directory, not from ‘another-app/dist/’ directory, because it will find main.bundle.js file from ‘ng-app/dist’ directory first.&lt;/p&gt;

&lt;p&gt;Instead of a directory location, we could have changed bundled file name with a suffix, e.g., ng2-app.main.bundle.js, ng2-app.inline.js, etc. But at the moment, there is no option to change bundled file name in Angular CLI configuration, so I decided to change its build target directory: ‘ng2-app/main.bundle.js’ instead of ‘ng2-app.main.bundle.js’.&lt;/p&gt;

&lt;h1 id=&quot;9-deploying-to-heroku&quot;&gt;9. Deploying to Heroku&lt;/h1&gt;

&lt;p&gt;This section is optional if you’d like to deploy your app to Heroku.&lt;/p&gt;

&lt;p&gt;The small disadvantage of this approach is that you can’t have Heroku handle its asset precompilation process. Before precompilation assets, you will have to run ng build on your Angular2 app. That means you will have to push precompiled assets to Heroku.&lt;/p&gt;

&lt;p&gt;At a minimum, you will need pg  and rails_12factor  gem for Heroku deployment. Add these two gems in your Gemfile.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :production &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Heroku recommended gem&lt;/span&gt;
  gem &lt;span class=&quot;s1&quot;&gt;'pg'&lt;/span&gt;
  gem &lt;span class=&quot;s1&quot;&gt;'rails_12factor'&lt;/span&gt;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And install gems: bundle install&lt;/p&gt;

&lt;p&gt;Initialize your GIT repository. And commit the files.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git init
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add .
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;initial commit&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now, create a Heroku server to deploy your app:  heroku create&lt;/p&gt;

&lt;p&gt;I don’t like to litter my master branch with precompiled assets in public directory. So I prefer to create a dist branch for deployment.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git co -b dist &lt;span class=&quot;c&quot;&gt;# create and switch to the dist branch&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(dist)$ &lt;/span&gt;rake assets:clobber &lt;span class=&quot;c&quot;&gt;# remove old assets&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(dist)$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ng2-app; ng build&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# build Angular2 app&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(dist)$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RAILS_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production rake assets:precompile &lt;span class=&quot;c&quot;&gt;# precompile assets&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(dist)$ &lt;/span&gt;git add --all
&lt;span class=&quot;gp&quot;&gt;(dist)$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;initial deployment&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# commit the change&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(dist)$ &lt;/span&gt;git push heroku dist:master &lt;span class=&quot;c&quot;&gt;# push dist branch to heroku's master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;These are a lot of steps to remember. You will have to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;create and switch to a dist branch&lt;/li&gt;
  &lt;li&gt;remove all old assets&lt;/li&gt;
  &lt;li&gt;build the Anuglar2 app&lt;/li&gt;
  &lt;li&gt;precompile assets&lt;/li&gt;
  &lt;li&gt;commit the changes&lt;/li&gt;
  &lt;li&gt;and push the changes to Heroku.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I usually let CI server handle all these steps, so once I set this process up, I do not have to remember.&lt;/p&gt;

&lt;p&gt;Now your Rails+Angular2 app is in the world of the internet! If you see 404 error on the home page in this particular example, don’t panic. That’s because we didn’t create a home page; we didn’t create a controller nor routing for ‘/’. But you can visit ‘/widgets’ page and ‘ng2-app/’ page to enjoy your app working.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;We’ve looked at step by step process for building Rails Application and Angular2 app from scratch using own CLI tools. And we’ve learned the Angular2 development workflow using ‘ng serve’ and API proxy. And we have found how to integrate the Angualr2 app into Rails app by serving the assets via Rails routing, the controller, and the view. Finally, we deployed the app to Heroku for the worlds to enjoy.&lt;/p&gt;

&lt;p&gt;The main advantage of the described process is the loose coupling of Rails and Angular2 apps, which ensure future-proof. If your team expands and you’d want to create separate repositories for Rails and Anguar2 app, you only need to move ng2-app directory out of root directory and couple lines of configurations. And if you’d like to add more Angular2 apps under the same umbrella, you can do that by typing ‘ng new another-app’.&lt;/p&gt;

&lt;p&gt;Although I used Angular2 in this example, the same process can be applied to any JavaScript Single Page App using bundlers like webpack or jspm or build tools like Grunt.&lt;/p&gt;

&lt;p&gt;You can download entire code at github and view the working app here.&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">Developer Roadmap</title><link href="http://localhost:4000/2017/03/29/developer-roadmap.html" rel="alternate" type="text/html" title="Developer Roadmap" /><published>2017-03-29T00:00:00+07:00</published><updated>2017-03-29T00:00:00+07:00</updated><id>http://localhost:4000/2017/03/29/developer-roadmap</id><content type="html" xml:base="http://localhost:4000/2017/03/29/developer-roadmap.html">&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/GyvcunJ.png&quot; alt=&quot;Web Developer Roadmap&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Roadmap to becoming a web developer in 2017&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a frontend, backend or a devops. I made these charts for an old professor of mine who wanted something to share with his college students to give them a perspective.&lt;/p&gt;

&lt;p&gt;If you think that these can be improved in anyway, please do suggest.&lt;/p&gt;

&lt;hr /&gt;

&lt;p align=&quot;center&quot;&gt;&lt;b&gt; Want to learn something new?&lt;/b&gt;&lt;br /&gt;Visit &lt;a href=&quot;http://hugobots.com&quot;&gt;Hugobots&lt;/a&gt; where I teach people&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;-introduction&quot;&gt;🚀 Introduction&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/qBlT67N.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-front-end-roadmap&quot;&gt;🎨 Front-end Roadmap&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/A7Ms6cn.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-back-end-roadmap&quot;&gt;👽 Back-end Roadmap&lt;/h2&gt;

&lt;p&gt;For the backend, personally I would prefer Node.js and PHP 7 for the full time plus I have been experimenting lately with Go and I quite like it. Apart from these, if I have to choose another one, I would go for Ruby. However this is just my personal preference, you can choose any of the shown languages and you will be good.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/m9V8ZiV.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-devops-roadmap&quot;&gt;👷 DevOps Roadmap&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/4yJ9r79.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-wrap-up&quot;&gt;🚦 Wrap Up&lt;/h2&gt;

&lt;p&gt;If you think any of the roadmaps can be improved, please do open a PR with any updates and submit any issues. Also, I will continue to improve this, so you might want to watch/star this repository to revisit.&lt;/p&gt;

&lt;h2 id=&quot;-todo&quot;&gt;☑ TODO&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;[X] Add Frontend Roadmap&lt;/li&gt;
  &lt;li&gt;[X] Add Backend Roadmap&lt;/li&gt;
  &lt;li&gt;[X] Add DevOps Roadmap&lt;/li&gt;
  &lt;li&gt;[ ] Add relevant resources for each&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-contribution&quot;&gt;👬 Contribution&lt;/h2&gt;

&lt;p&gt;The roadmaps are built using &lt;a href=&quot;https://balsamiq.com/products/mockups/&quot;&gt;Balsamiq&lt;/a&gt;. Project file can be found at &lt;code class=&quot;highlighter-rouge&quot;&gt;/project-files&lt;/code&gt; directory. To modify any of the roadmaps, open Balsamiq, click &lt;strong&gt;Project &amp;gt; Import &amp;gt; Mockup JSON&lt;/strong&gt;, it will open the roadmap for you, update it, upload and update the images in readme and create a PR.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open pull request with improvements&lt;/li&gt;
  &lt;li&gt;Discuss ideas in issues&lt;/li&gt;
  &lt;li&gt;Spread the word&lt;/li&gt;
  &lt;li&gt;Reach out to me directly at kamranahmed.se@gmail.com or on Twitter &lt;a href=&quot;http://twitter.com/kamranahmedse&quot;&gt;@kamranahmedse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sponsored-by&quot;&gt;Sponsored By&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://fancygrid.com&quot;&gt;FancyGrid - JavaScript grid library with charts integration and server communication.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;«««&amp;lt; HEAD
&lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg&quot; alt=&quot;License: CC BY 4.0&quot; /&gt;&lt;/a&gt;
=======
&lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg&quot; alt=&quot;License: CC BY 4.0&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;blockquote&gt;
          &lt;blockquote&gt;
            &lt;blockquote&gt;
              &lt;p&gt;897c86a7c0aeda6f1b56cd922ba32ae240447093&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/blockquote&gt;
        &lt;/blockquote&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;</content><summary type="html"></summary></entry><entry><title type="html">Lập trình Javascript trong năm 2017</title><link href="http://localhost:4000/jekyll/update/2017/03/04/lap-trinh-javascript-trong-nam-2017.html" rel="alternate" type="text/html" title="Lập trình Javascript trong năm 2017" /><published>2017-03-04T00:00:00+07:00</published><updated>2017-03-04T00:00:00+07:00</updated><id>http://localhost:4000/jekyll/update/2017/03/04/lap-trinh-javascript-trong-nam-2017</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/03/04/lap-trinh-javascript-trong-nam-2017.html">&lt;p&gt;&lt;img src=&quot;https://thefullfool.files.wordpress.com/2010/09/wheres-waldo1.jpg&quot; alt=&quot;Lập trình Javascript trong năm 2017&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lập trình Javascript trong năm 2017&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bạn là một lập trình viên có kinh nghiệm 5 năm làm việc với các REST API? Bạn đã tối ưu tìm kiếm cho hệ cơ sở dữ liệu khổng lồ ở công ty bạn? Bạn đã viết các chương trình nhúng cho cái lò vi sóng? Hẳn là cũng lâu rồi kể từ lúc bạn đánh vật với mấy cái Prototype.js để viết OOP phía trình duyệt sao cho chuẩn. Và bây giờ bạn quyết định rằng đã đến lúc để nâng cấp các kĩ năng front-end của bạn. Tuy nhiên khi bạn bắt đầu tìm hiểu thì bạn ngay lập tức cảm thấy như thế này.&lt;/p&gt;

&lt;p&gt;Cái cảm giác vô định, bối rối này thực ra lại là một chuyện thường ngày ở huyện trong cộng đồng Javascript. Nếu vẫn chưa đủ khiến các bạn bối rối, thì đây là 1 cuộc nói chuyện giữa 2 người bạn, phản ánh chính xác tình trạng trên.&lt;/p&gt;

&lt;p&gt;Nhưng bạn lại không có thời gian để mà lo lắng về 1 đống công nghệ trôi nổi xung quanh ấy. Bạn hiện giờ đang ở trong một cái mê cung, và bạn cần 1 cái bản đồ. Được thôi, tôi sẽ làm cho bạn 1 cái.&lt;/p&gt;

&lt;p&gt;Tuy nhiên có 1 chút lưu ý nho nhỏ: đây là 1 tài liệu tham khảo giúp bạn nhanh chóng sử dụng các công nghệ hiện thời mà không phải suy nghĩ quá nhiều. Về cơ bản tôi sẽ phác ra 1 bản danh sách các công cụ kết hợp tốt với nhau cho nhu cầu thường thấy của các lập trình viên front-end. Điều này sẽ giúp bạn thoải mái, tránh đi những cơn đau đầu không cần thiết. Một khi bạn đã hoàn thành các topic này, bạn có thể tự tin tiếp tục với stack mà bạn thấy thích thú.&lt;/p&gt;

&lt;p&gt;Làm quen và triển khai các kiến trúc xây dựng ứng dụng trong khóa thực tập NodeJS Full Stack&lt;/p&gt;

&lt;p&gt;Cấu trúc “bản đồ”&lt;/p&gt;

&lt;p&gt;Tôi sẽ chia thành các vấn đề nhỏ để bạn có thể tập trung xử lý từng cái một. Với mỗi vấn đề đó, tôi sẽ:&lt;/p&gt;

&lt;p&gt;Mô tả nhu cầu sử dụng công cụ.
Quyết định sử dụng công cụ nào đối với vấn đề đó.
Giải thích tại sao tôi lại chọn nó.
Đưa ra một số giải pháp thay thế.
Quản lý package&lt;/p&gt;

&lt;p&gt;Vấn đề: cần thiết trong việc tổ chức project và các dependency.
Giải pháp: NPM và Yarn.
Lý do chọn: hẳn bạn chẳng lạ gì NPM, trình quản lý package thông dụng nhất hiện nay. Yarn, hướng đến giải quyết các vấn đề về tối ưu các dependency, kiểm soát phiên bản của các thư viện bạn sử dụng trong 1 file lock (sử dụng song song với phiên bản ngữ nghĩa - semantic version của NPM, theo cách bổ sung cho nhau).
Một số phương án thay thế: trong giới hạn kiến thức của tôi thì là không có.
Javascript&lt;/p&gt;

&lt;p&gt;Vấn đề: ECMAScript 5 (hay còn được gọi là anh già Javascript) tồi quá.
Giải pháp: ES6.
Lý do chọn: Kết hợp rất nhiều tính năng có sẵn trên các ngôn ngữ lập trình khác. Vài tính năng thú vị như: arrow function, module import - export, de-structuring, template string, let và const, generator, promise. Nếu là một lập trình viên Python thì bạn sẽ thoải mái thôi.
Một số phương án thay thế: TypeScript, CoffeeScript, PureScript, Elm.
Biên dịch&lt;/p&gt;

&lt;p&gt;Vấn đề: Nhiều trình duyệt đang được sử dụng vẫn chưa hỗ trợ ES6. Bạn sẽ cần 1 trình để biên dịch ES6 sang các chuẩn thấp hơn để tương thích với các trình duyệt, như là ES5.
Giải pháp: babel.
Lý do chọn: làm việc rất hoàn hảo. Biên dịch phía server.
Một số phương án thay thế: Traceur.
Lưu ý: sử dụng babel-loader, 1 loader Webpack. 
Linting (tìm lỗi code trong nguồn mà không cần phải chạy code)&lt;/p&gt;

&lt;p&gt;Vấn đề: có rất nhiều cách viết mã Javascript và điều đó dẫn đến việc rất khó đảm bảo consistency (tính chắc chắn). Các linter có thể ngăn chặn được một số bug.
Giải pháp: ESLint.
Lý do chọn: code rất tuyệt, dễ config. Airbnb preset là mọi thứ bạn cần có để thiết lập và chạy. Giúp bạn làm quen với cú pháp mới.
Một số phương án thay thế: JSLint.
Bundling (đóng gói code)&lt;/p&gt;

&lt;p&gt;Vấn đề: số lượng file trong project ngày càng nhiều. Các dependency cần được xử lý và gọi một cách đúng đắn.
Giải pháp: Webpack
Lý do chọn: dễ cấu hình. Có thể load tất cả các loại dependency và asset. Tính tương thích cao. Là bundler được ưa thích cho các project React.
Một số phương án thay thế: Browserify.
Nhược điểm: cấu hình lần đầu có 1 chút khó khăn.
Lưu ý: nếu bạn muốn dành thời gian để hiểu thêm về bundler này, bạn cần học về babel-loader, style-loader, css-loader, file-loader, url-loader.
Test&lt;/p&gt;

&lt;p&gt;Vấn đề: ứng dụng của bạn không hoàn hảo. Với rất nhiều bug (chắc chắn 😎) thì nó sẽ dễ dàng xảy ra vấn đề, hỏng hóc. Bạn cần test để tránh tối đa lỗi có thể xảy ra.
Giải pháp: mocha (test runner), chai (thư viện assertion), và chai-spies (cho các spy, fake object mà bạn có thể truy xuất với bất cứ sự kiện nào - mong muốn hay không mong muốn xảy ra). 
Lý do chọn: sử dụng rất đơn giản, rất mạnh mẽ.
Một số phương án thay thế: Jasmine, Jest, Sinon, Tape.
Framework UI/ quản lý trạng thái&lt;/p&gt;

&lt;p&gt;Vấn đề: Các SPA (Single Page Application) đang ngày càng nhiều, càng phức tạp. Do đó các state (trạng thái) hay thay đổi trở thành rắc rối lớn.
Giải pháp: React và Redux.
Lý do chọn React: Tạo sự thay đổi lớn trong cách tư duy, xóa bỏ nhiều ràng buộc cũ kĩ của các website, làm cho các website trở nên tuyệt vời hơn. Không còn sử dụng phương pháp truyền thống nữa, thay vào đó là chia nhỏ các mối quan tâm: bỏ đi cách chia các thành phần theo công nghệ (HTML, CSS, JS), chuyển sang cách chia tách chúng theo chức năng (các component). UI lúc này hoàn toàn là các function thuần của state. 
Lý do chọn Redux: Nếu bạn có ý định xây dựng 1 ứng dụng lớn, bạn cần 1 công cụ để quản lý state (mặt khác bạn sẽ cần các component tương tác với nhau, hãy học Vanilla inter-component communication trước để trải nghiệm). Redux sẽ thực thi pattern theo 1 cách đơn giản. Facebook cũng sử dụng Redux. Thêm vào đó là rất nhiều điều tuyệt vời: reload và vẫn giữ nguyên các state, luồng dữ liệu, các test.
Một số phương án thay thế: Angular2, Vue.js.
Cảnh báo: Lần đầu tiên nhìn thấy JSX hẳn là bạn đã rất bực mình. Chắc hẳn bạn đã phải kháng cự lại mong muốn tìm ngay một forum và gào thét lên với các đồng đạo. Nó chỉ là do sự mâu thuẫn trong nhận thức. Sau khi học 1 thời gian, bạn mới nhận ra rằng trộn lẫn HTML, Javascript, CSS trong 1 file đơn lẻ hóa ra cũng không phải là 1 ý tưởng tồi tệ. 
Thao tác, animate DOM&lt;/p&gt;

&lt;p&gt;Vấn đề: Bạn thỉnh thoảng vẫn cần quick fix mỗi khi bạn chọn lựa các selector và thực hiện các hoạt động trực tiếp trên các nút DOM.
Giải pháp: ES6 hay jQuery.
Lý do chọn: Hiển nhiên là jQuery vẫn đang sống mạnh và khỏe. React và jQuery chả đụng chạm gì đến nhau cả. Tuy nhiên, có khả năng là phần lớn bạn sẽ làm việc với vanilla React (và querySelector). Và khi đó, việc thêm jQuery sẽ làm tăng thêm rắc rối cho bundle. Sử dụng jQuery ở tầng trên React thực sự không ổn tí nào, bạn cần lưu ý tránh điều đó. Nếu bạn đang đụng phải 1 vấn đề mà bạn không biết xử lý thế nào với React và ES6, hay như các vấn đề về cross browser, thì có thể jQuery sẽ hữu dụng.
Một số phương án thay thế: Dojo (tôi không biết là nó có còn tồn tại hay không nữa?).
Styling&lt;/p&gt;

&lt;p&gt;Vấn đề: Bạn đang có các module thích hợp, bạn muốn chúng là những mảnh hoạt động độc lập, có thể tái sử dụng. Khi đó style của component cần phải linh động như chính component đó.
Giải pháp: CSS module.
Lý do chọn: Mặc dù tôi thích dùng inline-style (và sử dụng chúng rất nhiều), tôi vẫn phải thừa nhận rằng chúng khá là giới hạn. Đúng là hoàn toàn được khi sử dụng inline-style trong React, tuy nhiên bạn sẽ không thể sử dụng được các giả-selector (như là :hover) với chúng. Điều đó sẽ phá tan tành ứng dụng của bạn.
Một số phương án thay thế: Inline style. Điều tôi thực sự khoái inline-style trong React là nó cho phép bạn làm việc với các style như là các object Javascript thông thường. Inline-style cũng ở trong cùng file với component, điều này rất tốt cho quá trình maintain. Một vài người vẫn đang ủng hộ cho SASS, SCSS hay LESS. Tuy nhiên chúng yêu cầu phải thông 1 bước để build, cũng như không linh hoạt như CSS module hay là inline-style.
Vậy là đủ!&lt;/p&gt;

&lt;p&gt;Đến giờ thì bạn đã có đống thứ linh tinh để học, nhưng ít nhất thì bạn không cần mò mẫm nghiên cứu nữa. Tôi có quên cái gì không nhỉ? Hay là tôi có sai gì không? Hãy để lại nhận xét hay liên lạc với tôi qua twitter nhé.&lt;/p&gt;

&lt;p&gt;Bài viết được dịch từ: https://hackernoon.com/a-map-to-modern-javascript-development-2017-16d9eb86309c#.xydy1ve69&lt;/p&gt;</content><summary type="html"></summary></entry><entry><title type="html">20 câu hỏi tuyển dụng cơ bản cho Junior iOs Developer ( Phần 2)</title><link href="http://localhost:4000/jekyll/update/2016/12/30/welcome-to-jekyll.html" rel="alternate" type="text/html" title="20 câu hỏi tuyển dụng cơ bản cho Junior iOs Developer ( Phần 2)" /><published>2016-12-30T14:02:57+07:00</published><updated>2016-12-30T14:02:57+07:00</updated><id>http://localhost:4000/jekyll/update/2016/12/30/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/12/30/welcome-to-jekyll.html">&lt;p&gt;Tiếp theo phần 1, hôm nay chúng ta sẽ cùng nhau đi tiếp 10 câu hỏi còn lại trong bộ sưu tập những câu hỏi tuyển dụng cơ bản dành cho lập trình viên iOS mới ra trường và còn ít kinh nghiệm:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11 ) Phân biệt giữa frame và bounds  &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Frame là tọa độ và kích thước của view trong View cha của nó&lt;/p&gt;

&lt;p&gt;Bounds là tọa độ và kích thước của view trong hệ tọa độ của chính nó&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12 )  Mục đích sử dụng của khái niệm “reuseIdentifier” ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dùng để tái sử dụng một đối tượng đã được khởi tạo và cấp phát trước đó. Ví dụ: tableView.dequeuereuseablecellwithIdentifier&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13 ) Có bao nhiêu Cell được khởi tạo khi lần đầu tiên bạn load một UITableView? Mỗi khi scroll màn hình thì có bao nhiêu Cell được thêm vào?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;UITableView sẽ khởi tạo một số lượng object Cell vừa đủ để hiển thị trên màn hình của thiết bị. Và với cơ chế reuseIdentifier, UITableView sẽ không tạo thêm Cell nào cả, mà sẽ tái sử dụng các đối tượng sẵn có để tránh tình trạng giật, lag máy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14 )  Định nghĩa atomic và nonatomic.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Khi bạn có nhiều hơn một thread (luồng), nó có thể cho các setter và getter được gọi cùng một lúc. Điều này có nghĩa rằng getter / setter có thể bị gián đoạn bởi hoạt động khác, có thể dẫn đến dữ liệu bị hỏng.&lt;/p&gt;

&lt;p&gt;Thuộc tính Atomic sẽ ngăn chặn điều này xảy ra, đảm bảo rằng các hoạt động được, hoặc thiết lập đang làm việc với một giá trị đầy đủ. Tuy nhiên, điều quan trọng là phải hiểu rằng đây chỉ là một khía cạnh của thread-safe-using (luồng an thoàn) và thuộc tính Atomic không đảm bảo là mã của bạn là thread-safe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15)  Sự khác nhau giữa weak và strong ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Strong pointer là một con trỏ, trỏ đến một đối tượng và sở hữu (own) đối tượng đó. 
Weak pointer là một con trỏ, trỏ đến một đối tượng nhưng không sở hữu (own) đối tượng đó.&lt;/p&gt;

&lt;p&gt;Khi tạo ra một reference strong đến một đối tượng, retainCount của đối tượng đó tăng lên 1&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Khi release một tham chiếu strong đến một đối tượng, retainCount của đối tượng giảm đi 1
Nghĩa là: tham chiếu strong sở hữu đối tượng mà nó tham chiếu đến, nó quyết định đến sự tồn tại của đối tượng.&lt;/li&gt;
  &lt;li&gt;Khi retainCount của đối tượng về 0 thì đối tượng được giải phóng hoàn toàn khỏi bộ nhớ&lt;/li&gt;
  &lt;li&gt;Khi retainCount &amp;gt; 0 và gán object = nil thì đối tượng cũng được giải phóng hoàn toàn khỏi bộ nhớ&lt;/li&gt;
  &lt;li&gt;Khi tạo ra một tham chiếu “weak” đến một đối tượng, retainCount của đối tượng đó không tăng lên 1.&lt;/li&gt;
  &lt;li&gt;Khi release một tham chiếu “weak” đến một đối tượng, retainCount của đối tượng đó không bị giảm đi 1.
weak được sử dụng chủ yếu trong kết nối IBOutlet và sử dụng để tránh trường hợp retain cycle
&lt;br /&gt;
&lt;strong&gt;16)  Liệt kê 5 trạng thái của 1 ứng dụng iOs&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not running: Ứng dụng chưa được mở hoặc đang mở thì bị đóng bởi hệ thống.
Inactive: Ứng dụng đang chạy trên màn hình nhưng không nhận được thao tác nào của người dùng. Trạng thái này diễn ra khi ứng dụng đang trong giai đoạn chuyển từ màn hình này sang màn hình khác.
Active: Đây là chế độ bình thường của ứng dụng, ứng dụng chạy trên mà hình và nhận được đầy đủ các thao tác của người dùng.
Background: Ở trạng thái này, ứng dụng sẽ chạy ở dưới background, khi app đang chạy bình thường mà chúng ta ấn nút Home thì ứng dụng sẽ chuyển vào trạng thái này.
Suspended: Ứng dụng nằm ở dưới background nhưng code sẽ không chạy.
&lt;br /&gt;
&lt;strong&gt;17)  Category là gì và cách sử dụng ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Để thêm một phương thức vào trong class mà không muốn mở rộng nó, chúng ta sử dụng Category. Categories là cách để chúng ta phân chia một lớp khởi tạo ra nhiều file khác nhau. Mục đích của việc này là để giảm bớt gánh nặng của việc duy trì các đoạn cơ sở code  lớn bằng việc modul hóa thành một lớp. Điều này giúp bạn tránh khỏi việc viết các tập tin với hơn 10000 dòng code mà không thể ứng dụng, di chuyển đến chỗ khác.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;18) Phân biệt viewDidLoad và viewDidAppear? Nên dùng phương thức nào để load dữ liệu từ server để hiển thị trên view? &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;– viewDidLoad: Được gọi một lần khi lần đầu tiên đối tượng view của đối tượng UIViewController hiển thị.&lt;/p&gt;

&lt;p&gt;– viewDidAppear: Tương tự viewWillAppear, có thể được gọi nhiều lần. Method này được gọi sau khi view đã hiển thị.&lt;/p&gt;

&lt;p&gt;Nếu data là dạng tĩnh và không thay đổi nhiều, chúng ta nên load chúng ở phương thức viewDidlLoad. Tuy nhiên, nếu data của bạn là động và thay đổi thường xuyên, chúng ta nên load tại phương thức ViewDidAppear. Và lưu ý là tại 2 phương thức, data cần phải load theo dạng bất đồng bộ ở một thread khác để tránh ảnh hưởng đến UI.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;19) Điều gì xảy ra khi bạn gọi một method trên một con trỏ nil? &lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Một message được gửi tới một nil object là chấp nhận được trong Objective-C. Đây là một tính năng của ngôn ngữ này và không được xét là lỗi.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;20)  Duyệt phần tử ở đâu thì nhanh hơn? NSSet hay NSArray?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Khi thứ tự của các phần tử không quan trọng thì quá trình duyệt phần tử tại NSSet sẽ nhanh hơn vì NSSet sử dụng hash value để tìm phần tử, giống như từ điển. Còn NSArray sẽ duyệt qua nội dung của từng phần tử một.&lt;/p&gt;</content><summary type="html">Tiếp theo phần 1, hôm nay chúng ta sẽ cùng nhau đi tiếp 10 câu hỏi còn lại trong bộ sưu tập những câu hỏi tuyển dụng cơ bản dành cho lập trình viên iOS mới ra trường và còn ít kinh nghiệm:</summary></entry><entry><title type="html">Graphql</title><link href="http://localhost:4000/0017/04/22/GraphQL.html" rel="alternate" type="text/html" title="Graphql" /><published>0017-04-22T00:00:00+07:00</published><updated>0017-04-22T00:00:00+07:00</updated><id>http://localhost:4000/0017/04/22/GraphQL</id><content type="html" xml:base="http://localhost:4000/0017/04/22/GraphQL.html">&lt;p&gt;&lt;img src=&quot;https://cdn.thenewstack.io/media/2015/05/8541370656_3b638b0918_k-1024x732.jpg&quot; alt=&quot;React with graphql&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GraphQL
Có một sự thật về sự khác biệt giữa lập trình viên backend với lập trình viên frontend đó là:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anh backend lúc nào cũng là cu-ly
Anh frontend lại đóng vai trò là khách hàng, muốn dùng gì đều có thể đặt hàng anh backend trả ra cho đúng loại đó.
Anh frontend muốn dữ liệu kiểu gì thì cứ việc miêu tả, việc còn lại cứ để anh backend lo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://viblo.asia/uploads/01b3b31f-5136-4d95-8059-c4f57057a5be.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Làm thế nào để đỡ cho anh backend? Câu trả lời bây giờ là RESTful, anh frontend muốn gì thì cứ theo REST mà lấy, tuy nhiên anh backend vẫn phải thường xuyên nhúng tay vào.
Vậy tương lai sẽ là gì? Tất nhiên là tôi không thể trả lời vào thời điểm hiện tại, nhưng có thể là GraphQL&lt;/p&gt;

&lt;p&gt;GraphQL là gì?
Được Facebook giới thiệu cùng với Relay tại React.js Conf 2015, GraphQL là một ngôn ngữ truy vấn được tạo ra với mục đích hướng tới những dạng dữ liệu phức tạp, nhiều lớp với nhiều thành phần phụ thuộc được sử dụng ngày càng phổ biến trong các application hiện đại. Trên thực tế GraphQL đã được sử dụng từ vài năm trước trong ứng dụng trên mobile của Facebook.
GraphQL cho phép người lập trình frontend miêu tả dạng dữ liệu mong muốn một cách chủ động trong code, sau khi thực hiện query, GraphQL sẽ trả ra theo đúng dạng đã miêu tả.
Như vậy ở đây, ít nhất câu hỏi “Làm thế nào để đỡ cho anh backend?” đã có thể trả lời một cách rõ ràng hơn so với RESTful&lt;/p&gt;

&lt;p&gt;Anh frontend muốn dữ liệu kiểu gì thì cứ việc miêu tả, việc còn lại cứ để anh backend GraphQL lo.
GraphQL hoạt động như thế nào?
Cho tới thời điểm hiện tại, Facebook mới chỉ đang lên kế hoạch để mở mã nguồn cho một phiên bản tham khảo từ GraphQL nên chúng ta sẽ vẫn chưa thể biết được thực sự bên trong GraphQL hoạt động như thế nào. Tuy nhiên, ta có thể hình dung bề nổi của tảng băng, giúp GraphQL hoạt động gồm 2 phần chính:&lt;/p&gt;

&lt;p&gt;Schema Bản đồ chi tiết: mô tả của tất cả các trường, các mối quan hệ, các kiểu mà có thể sử dụng trong các truy vấn
Executor Một tay hướng đạo sinh: nhận mô tả ( truy vấn ) và sử dụng các bản đồ (schema) ở trên để dẫn đường tới đích (tới các data node ) và thu gom dữ liệu luôn, tất nhiên rồi.
Làm thế nào để vận hành GraphQL?
Để dễ hình dung, tôi sẽ lấy ví dụ bằng cấu trúc dữ liệu của GithubAPI. Đây không phải là một mô tả hoàn toàn chính xác, chỉ là 1 ví dụ
Ở đây tôi chỉ dùng DataMapper để mô tả các mảnh bản đồ kèm theo các mối quan hệ một cách đơn giản.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Author
    include DataMapper::Resource

    property :username,     String
    property :id,           Integer
    property :name,         String
    property :avatar_url,   String

    has n, :commits
    has n, :repositories, though: :commits
end

class Repository
    include DataMapper::Resource

    property :id,           Integer
    property :name,         String
    property :full_name,    String
    property :description,  String
    property :language,     String

    has n, :commits
    has n, :authors, through: :commits
end

class Commit
    include DataMapper::Resource

    property :sha,          String
    property :message,      String

    belongs_to :author
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Như vậy, với vai trò là người làm backend, tôi đã xong việc của mình. Việc anh frontend muốn lấy cái gì, tôi không cần quan tâm nữa, anh ta nên tự yêu cầu.
Với GraphQL, người làm frontend chỉ cần yêu cầu theo một format nào đó anh ta mong muốn, server sẽ gửi lại dữ liệu theo đúng dạng format đó.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Request&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    commit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sha: &lt;span class=&quot;s2&quot;&gt;&quot;c3b4dc2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        sha,
        message,
        author: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            username,
            name,
            avatar_url
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Response&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    sha: &lt;span class=&quot;s2&quot;&gt;&quot;c3b4dc2&quot;&lt;/span&gt;,
    message: &lt;span class=&quot;s2&quot;&gt;&quot;Query with GraphQL&quot;&lt;/span&gt;,
    author: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        login: &lt;span class=&quot;s2&quot;&gt;&quot;yeuem1vannam&quot;&lt;/span&gt;,
        name: &lt;span class=&quot;s2&quot;&gt;&quot;Phuong 'J' Le H.&quot;&lt;/span&gt;,
        avatar_url: &lt;span class=&quot;s2&quot;&gt;&quot;https://avatars0.githubusercontent.com/u/2409560?v=3&amp;amp;s=40&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ở đây tôi không nhắc tới Executor, tuy nhiên các bạn có thể thấy sự hiện diện của nó một cách rõ ràng, khi mà anh backend chỉ dừng lại ở việc định nghĩa các mảnh bản đồ, nhưng anh frontend vẫn có thể nhận được dữ liệu theo ý muốn.
Như vậy, để vận hành GraphQL, chỉ cần định nghĩa được schema, sau đó muốn lấy data gì, chỉ cần gửi request theo đúng dạng mong muốn.&lt;/p&gt;

&lt;p&gt;Vì sao phải là GraphQL mà không phải là các dạng SQL khác?
Bản thân GraphQL cũng có những mối liên kết (relationship), nên việc sử dụng các dạng SQL khác thế chỗ GraphQL là điểu hiển nhiên có thể. Tuy nhiên, khi các mối quan hệ trở nên phức tạp, ví dụ như mối quan hệ của các pixel với màu trong bức ảnh, mối quan hệ của một mạng xã hội, mối quan hệ của các nguyên tử có trong phân tử của một chất nào đó, thì với các hệ SQL thông thường:&lt;/p&gt;

&lt;p&gt;Việc lưu trữ và biểu diễn trở nên không hiệu quả.
Việc truy vấn trở nên lộn xộn, không dễ gì để giữ được format theo đúng chuẩn.
Khi các mối quan hệ trở nên trừu tượng, việc giữ các mối quan hệ đúng sẽ cần rất nhiều điều kiện.
Chính những hình mẫu kể trên đã dẫn tới yêu cầu của một hệ cơ sở dữ liệu có khả năng quản trị theo phương pháp hình học. GraphQL là một trong số đó.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://viblo.asia/uploads/02fd97e9-b26e-49aa-94ae-059b4e0d59e3.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vì sao phải là GraphQL mà không phải RESTful?
RESTful thực sự rất tuyệt vời! Tôi có thể khẳng định như vậy.
Nhưng khi sự phát triển của mobile apps và web one-page-application ngày càng trở nên mạnh mẽ, RESTful bộc lộ những điểm yếu của nó:&lt;/p&gt;

&lt;p&gt;Việc chia nhỏ theo resource khiến ta phải khởi tạo nhiều request cùng lúc để có thể lấy hết lượng data mong muốn hiển thị.
Khi dữ liệu có nhiều lớp, việc truy vấn trong database trở nên khó khăn, việc xuất dữ liệu ra trở nên kém hiệu quả bởi khả năng lặp lại dữ liệu cao.
Logic backend trở nên phức tạp và phình to nhanh chóng khi một API phục vụ cho nhiều application khác nhau.
Việc phát triển riêng biệt các component trong hệ thống vẫn còn khó khăn, bởi bất cứ thay đổi nào của một component, đều dẫn tới có thể ảnh hưởng tới các component còn lại. Ví dụ của tôi về mối quan hệ giữa backend dev và frontend dev là một minh chứng đơn giản.
Trong khi đó, với GraphQL&lt;/p&gt;

&lt;p&gt;Tất cả data mong muốn có thể gộp chung vào một truy vấn, tới một endpoint duy nhất
Với phương pháp duyệt cây, mỗi data node chỉ cần duyệt qua một lần duy nhất là đã có thể dùng cho mọi nơi trong data set, không phụ thuộc vào độ phức tạp của format dữ liệu.
Việc thay đổi phạm vi truy cập tới một trường nào đó cũng trở nên đơn giản, khả năng ảnh hưởng tới các phần khác thấp
Việc phát triển riêng biệt các component trở nên hiện thực hơn bao giờ hết.
Tương lai của GraphQL
Trên thực tế GraphQL được công bố bởi nó được dùng trong Relay - framework mới của Facebook, và ý tưởng của GraphQL không phải là một ý tưởng mới, thậm chí vẫn còn tồn đọng những vấn đề về bảo mật.
Tuy nhiên, dựa trên những gì chúng ta vừa phân tích, tôi nghĩ rằng GraphQL có khả năng phát triển và ứng dụng rất lớn, không chỉ với Replay mà có thể là một hệ quản trị độc lập. Sự thành công khi áp dụng nó không chỉ phụ thuộc vào bản thân GraphQL mà còn phụ thuộc vào phương pháp tiếp cận của chúng ta.
Facebook đã chứng minh được khả năng của GraphQL khi có một cách tiếp cận đúng đắn.&lt;/p&gt;

&lt;p&gt;TL;DR
Khi các app hiện đại ngày càng trở nên phát triển, GraphQL thực sự là một công nghệ đáng chú ý, không chỉ có khả năng thay thế các công nghệ cũ nhằm đáp ứng được yêu cầu mới, mà còn có khả năng thay đổi cả phương pháp phát triển. Ngay lúc này, chúng ta đã và đang được trải nghiệm sức mạnh của GraphQL trên Facebook mobile app, sau đó sẽ là trên Relay, và những nền tảng khác nữa.
GraphQL thực sự có thể trở thành một công nghệ thay đổi thế giới.&lt;/p&gt;</content><summary type="html"></summary></entry></feed>
